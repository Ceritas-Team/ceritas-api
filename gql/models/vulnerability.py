from sqlalchemy import Column, Integer, String, BigInteger, Boolean, Text, TIMESTAMP, ForeignKey, JSON
from . import Base
from sqlalchemy.dialects.postgresql import JSONB
from sqlalchemy.sql import func
from sqlalchemy.orm import relationship

class Vulnerability(Base):
    __tablename__ = 'vulnerabilities'

    id = Column(BigInteger, primary_key=True, nullable=False)
    cer_id = Column(Integer)
    cve_reserved = Column(Boolean, nullable=False, default=False)
    ics_cert_number = Column(String(255))
    vendor_vulnerability_id = Column(String(255))
    raw_vulnerability_description = Column(Text)
    curated_vulnerability_description = Column(Text)
    raw_mitigation_description = Column(Text)
    curated_mitigation_description = Column(Text)
    attack_complexity = Column(String(255))
    cwe = Column(String(255))
    cvss_score = Column(String(255))
    date_released = Column(TIMESTAMP)
    date_added = Column(TIMESTAMP, nullable=False, server_default=func.current_timestamp())
    date_updated = Column(TIMESTAMP, nullable=False)
    current_severity_history_id = Column(BigInteger, ForeignKey('vulnerability_severity_history.id', ondelete='SET NULL'))
    cve_id = Column(BigInteger, ForeignKey('nvd_cves.id'))
    mitigation_links = Column(JSONB)

    #relationships

    vulnerability_core_product = relationship("VulnerabilityCoreProduct", back_populates="vulnerability")
